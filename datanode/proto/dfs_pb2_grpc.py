# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import dfs_pb2 as dfs__pb2

GRPC_GENERATED_VERSION = '1.66.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in dfs_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class DFSStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Login = channel.unary_unary(
                '/dfs.DFS/Login',
                request_serializer=dfs__pb2.LoginRequest.SerializeToString,
                response_deserializer=dfs__pb2.LoginResponse.FromString,
                _registered_method=True)
        self.CreateUser = channel.unary_unary(
                '/dfs.DFS/CreateUser',
                request_serializer=dfs__pb2.CreateUserRequest.SerializeToString,
                response_deserializer=dfs__pb2.CreateUserResponse.FromString,
                _registered_method=True)
        self.ListDirectories = channel.unary_unary(
                '/dfs.DFS/ListDirectories',
                request_serializer=dfs__pb2.ListRequest.SerializeToString,
                response_deserializer=dfs__pb2.ListResponse.FromString,
                _registered_method=True)
        self.MakeDirectory = channel.unary_unary(
                '/dfs.DFS/MakeDirectory',
                request_serializer=dfs__pb2.MakeDirRequest.SerializeToString,
                response_deserializer=dfs__pb2.MakeDirResponse.FromString,
                _registered_method=True)
        self.ChangeDirectory = channel.unary_unary(
                '/dfs.DFS/ChangeDirectory',
                request_serializer=dfs__pb2.ChangeDirRequest.SerializeToString,
                response_deserializer=dfs__pb2.ChangeDirResponse.FromString,
                _registered_method=True)
        self.RemoveDirectory = channel.unary_unary(
                '/dfs.DFS/RemoveDirectory',
                request_serializer=dfs__pb2.RemoveDirRequest.SerializeToString,
                response_deserializer=dfs__pb2.RemoveDirResponse.FromString,
                _registered_method=True)
        self.SendBlock = channel.unary_unary(
                '/dfs.DFS/SendBlock',
                request_serializer=dfs__pb2.SendBlockRequest.SerializeToString,
                response_deserializer=dfs__pb2.SendBlockResponse.FromString,
                _registered_method=True)
        self.RemoveFile = channel.unary_unary(
                '/dfs.DFS/RemoveFile',
                request_serializer=dfs__pb2.RemoveFileRequest.SerializeToString,
                response_deserializer=dfs__pb2.RemoveFileResponse.FromString,
                _registered_method=True)
        self.GetFileInfo = channel.unary_unary(
                '/dfs.DFS/GetFileInfo',
                request_serializer=dfs__pb2.GetFileInfoRequest.SerializeToString,
                response_deserializer=dfs__pb2.GetFileInfoResponse.FromString,
                _registered_method=True)


class DFSServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Login(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDirectories(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MakeDirectory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeDirectory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveDirectory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendBlock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFileInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DFSServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=dfs__pb2.LoginRequest.FromString,
                    response_serializer=dfs__pb2.LoginResponse.SerializeToString,
            ),
            'CreateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUser,
                    request_deserializer=dfs__pb2.CreateUserRequest.FromString,
                    response_serializer=dfs__pb2.CreateUserResponse.SerializeToString,
            ),
            'ListDirectories': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDirectories,
                    request_deserializer=dfs__pb2.ListRequest.FromString,
                    response_serializer=dfs__pb2.ListResponse.SerializeToString,
            ),
            'MakeDirectory': grpc.unary_unary_rpc_method_handler(
                    servicer.MakeDirectory,
                    request_deserializer=dfs__pb2.MakeDirRequest.FromString,
                    response_serializer=dfs__pb2.MakeDirResponse.SerializeToString,
            ),
            'ChangeDirectory': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeDirectory,
                    request_deserializer=dfs__pb2.ChangeDirRequest.FromString,
                    response_serializer=dfs__pb2.ChangeDirResponse.SerializeToString,
            ),
            'RemoveDirectory': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveDirectory,
                    request_deserializer=dfs__pb2.RemoveDirRequest.FromString,
                    response_serializer=dfs__pb2.RemoveDirResponse.SerializeToString,
            ),
            'SendBlock': grpc.unary_unary_rpc_method_handler(
                    servicer.SendBlock,
                    request_deserializer=dfs__pb2.SendBlockRequest.FromString,
                    response_serializer=dfs__pb2.SendBlockResponse.SerializeToString,
            ),
            'RemoveFile': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveFile,
                    request_deserializer=dfs__pb2.RemoveFileRequest.FromString,
                    response_serializer=dfs__pb2.RemoveFileResponse.SerializeToString,
            ),
            'GetFileInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFileInfo,
                    request_deserializer=dfs__pb2.GetFileInfoRequest.FromString,
                    response_serializer=dfs__pb2.GetFileInfoResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dfs.DFS', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('dfs.DFS', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class DFS(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dfs.DFS/Login',
            dfs__pb2.LoginRequest.SerializeToString,
            dfs__pb2.LoginResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dfs.DFS/CreateUser',
            dfs__pb2.CreateUserRequest.SerializeToString,
            dfs__pb2.CreateUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListDirectories(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dfs.DFS/ListDirectories',
            dfs__pb2.ListRequest.SerializeToString,
            dfs__pb2.ListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MakeDirectory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dfs.DFS/MakeDirectory',
            dfs__pb2.MakeDirRequest.SerializeToString,
            dfs__pb2.MakeDirResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ChangeDirectory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dfs.DFS/ChangeDirectory',
            dfs__pb2.ChangeDirRequest.SerializeToString,
            dfs__pb2.ChangeDirResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveDirectory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dfs.DFS/RemoveDirectory',
            dfs__pb2.RemoveDirRequest.SerializeToString,
            dfs__pb2.RemoveDirResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendBlock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dfs.DFS/SendBlock',
            dfs__pb2.SendBlockRequest.SerializeToString,
            dfs__pb2.SendBlockResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dfs.DFS/RemoveFile',
            dfs__pb2.RemoveFileRequest.SerializeToString,
            dfs__pb2.RemoveFileResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetFileInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dfs.DFS/GetFileInfo',
            dfs__pb2.GetFileInfoRequest.SerializeToString,
            dfs__pb2.GetFileInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class DataNodeStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StoreBlock = channel.unary_unary(
                '/dfs.DataNode/StoreBlock',
                request_serializer=dfs__pb2.StoreBlockRequest.SerializeToString,
                response_deserializer=dfs__pb2.StoreBlockResponse.FromString,
                _registered_method=True)


class DataNodeServicer(object):
    """Missing associated documentation comment in .proto file."""

    def StoreBlock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DataNodeServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StoreBlock': grpc.unary_unary_rpc_method_handler(
                    servicer.StoreBlock,
                    request_deserializer=dfs__pb2.StoreBlockRequest.FromString,
                    response_serializer=dfs__pb2.StoreBlockResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dfs.DataNode', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('dfs.DataNode', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class DataNode(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def StoreBlock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dfs.DataNode/StoreBlock',
            dfs__pb2.StoreBlockRequest.SerializeToString,
            dfs__pb2.StoreBlockResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
